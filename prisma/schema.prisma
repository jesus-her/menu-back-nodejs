generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id       Int    @id @default(autoincrement())
  email    String @unique
  password String
  storeId  Int
  store    Store? @relation(fields: [storeId], references: [id])
}

model Store {
  id          Int        @id @default(autoincrement())
  name        String
  description String
  logoUrl     String
  address     String?
  igUrl       String?
  phone       String?
  themeColor  String?
  categories  Category[] @relation("StoreCategories")
  banners     Banner[] @relation("StoreBanners")
  products    Product[]  @relation("StoreProducts")
  orders      Order[]  @relation("StoreOrders")
  users       user[]
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  image       String?
  price       Float
  storeId     Int
  categoryId  Int
  category    Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  store       Store    @relation("StoreProducts", fields: [storeId], references: [id])
  cartItem  CartItem[]
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String
  storeId  Int
  store    Store     @relation("StoreCategories", fields: [storeId], references: [id])
  products Product[]
}


model Banner {
  id            Int       @id @default(autoincrement())
  title         String
  subtitle      String
  image         String
  description   String
  storeId       Int
  store         Store     @relation("StoreBanners", fields: [storeId], references: [id])
}

model Order {
  id          Int         @id @default(autoincrement())
  createdAt   DateTime    @default(now())
  isShared    Boolean     @default(false)
  total       Float
  paymentType String
  storeId     Int
  store       Store      @relation("StoreOrders", fields: [storeId], references: [id])
  userOrders  UserOrder[]
}

model UserOrder {
  id        Int     @id @default(autoincrement())
  orderId   Int
  username  String
  cartPrice Float
  order     Order   @relation(fields: [orderId], references: [id])
  cartList  CartItem[]
}

model CartItem {
  id         Int       @id @default(autoincrement())
  userOrderId Int
  productId  Int
  quantity   Int
  product    Product  @relation(fields: [productId], references: [id])
  userOrder  UserOrder @relation(fields: [userOrderId], references: [id])
}
